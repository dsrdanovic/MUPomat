/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mupomat.view;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import mupomat.controller.ObradaGrad;
import mupomat.controller.ObradaPolicijskaUprava;
import mupomat.model.Grad;
import mupomat.model.Operater;
import mupomat.model.PolicijskaUprava;
import mupomat.utility.Kontrola;

/**
 *
 * @author SrKy
 */
public class Gradovi extends javax.swing.JFrame {

    private Pattern pattern;
    private Matcher matcher;
    private ObradaGrad obradaGrad;
    private Grad grad;
    private Operater operater;
    private ImageIcon ikona;

    /**
     * Creates new form Gradovi
     *
     * @param operater
     */
    public Gradovi(Operater operater) {
        initComponents();
        setTitle("MUPomat: Gradovi");
        ikona = new ImageIcon(getClass().getResource("/mupomat/pictures/balloonerror.png"));
        centrirajZaslon();
        dodajIkonu();
        obradaGrad = new ObradaGrad();
        this.operater = operater;
        napuniCBPolicijskeUprave();
        trazi();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaGradova = new javax.swing.JList();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPostanskiBroj = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cmbPolicijskeUprave = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnPonisti = new javax.swing.JButton();
        btnIzlaz = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblDatumPromjene = new javax.swing.JLabel();
        lblDatumUnosa = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtUvjet = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Gradovi u bazi"));
        jPanel1.setPreferredSize(new java.awt.Dimension(287, 191));

        listaGradova.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaGradovaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listaGradova);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci o gradu"));
        jPanel2.setPreferredSize(new java.awt.Dimension(228, 177));

        jLabel1.setText("Naziv");

        jLabel2.setText("Poštanski broj");

        jLabel4.setText("Policijska uprava");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPostanskiBroj)
                    .addComponent(txtNaziv)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cmbPolicijskeUprave, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPostanskiBroj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbPolicijskeUprave, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Opcije"));

        btnDodaj.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/dodajikona.png"))); // NOI18N
        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/exitmenuicon.png"))); // NOI18N
        btnObrisi.setText("Obrši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnPonisti.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/ponistiikona.png"))); // NOI18N
        btnPonisti.setText("Poništi");
        btnPonisti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPonistiActionPerformed(evt);
            }
        });

        btnIzlaz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/izlazikona.png"))); // NOI18N
        btnIzlaz.setText("Izlaz");
        btnIzlaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzlazActionPerformed(evt);
            }
        });

        btnPromjeni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/promjeniikona.png"))); // NOI18N
        btnPromjeni.setText("Promjeni");
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPromjeni)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPonisti, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIzlaz, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi)
                    .addComponent(btnPonisti)
                    .addComponent(btnIzlaz)
                    .addComponent(btnPromjeni))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Datumi"));

        jLabel5.setText("Datum unosa:");

        jLabel6.setText("Datum promjene:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDatumUnosa)
                    .addComponent(lblDatumPromjene))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(lblDatumUnosa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lblDatumPromjene))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Traži grad"));
        jPanel5.setToolTipText("");

        txtUvjet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUvjetKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtUvjet, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 245, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUvjetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUvjetKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            trazi();
        }
    }//GEN-LAST:event_txtUvjetKeyPressed

    private void listaGradovaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaGradovaValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }

        grad = (Grad) listaGradova.getSelectedValue();

        if (grad == null) {
            return;
        }
        postaviPolicijskeUprave();

        SimpleDateFormat df = new SimpleDateFormat(Kontrola.FORMAT_DATUMA_VRIJEME);
        lblDatumUnosa.setText(df.format(grad.getDatumUnosa()));

        if (grad.getDatumPromjene() != null) {
            lblDatumPromjene.setText(df.format(grad.getDatumPromjene()));
        }

        txtNaziv.setText(grad.getNaziv());
        txtPostanskiBroj.setText(grad.getPostanskibroj());

    }//GEN-LAST:event_listaGradovaValueChanged

    private void btnIzlazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzlazActionPerformed
        Object[] options = {"Izađi",
            "Ostani",};
        int rez = JOptionPane.showOptionDialog(rootPane,//parent container of JOptionPane
                "Jeste li sigurni da želite izaći iz gradova?",
                "Izlaz",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,//do not use a custom Icon
                options,//the titles of buttons
                null);//default button title
        if (rez == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnIzlazActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        if (!kontrola()) {
            return;
        }

        if (cmbPolicijskeUprave.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Niste odabrali policijsku upravu!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        grad = new Grad();
        grad.setNaziv(txtNaziv.getText());
        grad.setPostanskibroj(txtPostanskiBroj.getText());
        grad.setOperater(operater);
        grad.setPolicijskaUprava((PolicijskaUprava) cmbPolicijskeUprave.getSelectedItem());
        grad = obradaGrad.dodajNovi(grad);

        trazi();
        pocistiPolja();
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        if (grad == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite grad!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (cmbPolicijskeUprave.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Niste odabrali policijsku upravu!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!kontrola()) {
            return;
        }

        grad.setNaziv(txtNaziv.getText());
        grad.setPostanskibroj(txtPostanskiBroj.getText());
        grad.setOperater(operater);
        grad.setPolicijskaUprava((PolicijskaUprava) cmbPolicijskeUprave.getSelectedItem());
        obradaGrad.promjeniPostojeci(grad);

        pocistiPolja();
        trazi();
    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        if (grad == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite grad!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (cmbPolicijskeUprave.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Niste odabrali policijsku upravu!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Object[] options = {"Da",
            "Ne",};
        int rez = JOptionPane.showOptionDialog(rootPane,//parent container of JOptionPane
                "Sigurno obrisati?",
                "Brisanje",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,//do not use a custom Icon
                options,//the titles of buttons
                options[1]);//default button title
        if (rez == JOptionPane.YES_OPTION) {
            try {
                obradaGrad.obrisiPostojeci(grad);
                trazi();
                pocistiPolja();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(rootPane, "Grad se ne može obrisati jer je na njega prijavljena jedna ili više policijskih postaja!", "Greška", JOptionPane.ERROR_MESSAGE);
            }
        }


    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnPonistiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPonistiActionPerformed
        pocistiPolja();
    }//GEN-LAST:event_btnPonistiActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzlaz;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPonisti;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JComboBox cmbPolicijskeUprave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblDatumPromjene;
    private javax.swing.JLabel lblDatumUnosa;
    private javax.swing.JList listaGradova;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtPostanskiBroj;
    private javax.swing.JTextField txtUvjet;
    // End of variables declaration//GEN-END:variables
    private void trazi() {

        List<Grad> lista = obradaGrad.dohvatiIzBaze(txtUvjet.getText().trim());

        DefaultListModel<Grad> m = new DefaultListModel<>();

        for (Grad grad : lista) {

            m.addElement(grad);

        }

        listaGradova.setModel(m);
    }

    private void centrirajZaslon() {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
        this.setResizable(false);
    }

    private void dodajIkonu() {
        this.setIconImage(new ImageIcon(getClass()
                .getResource("/mupomat" + "/pictures" + "/gradmenuicon.png")).getImage());
    }

    private boolean kontrola() {
        if (!kontrolaNaziv()
                || !kontrolaPostanskiBroj()) {
            return false;
        }

        return true;
    }

    private void pocistiPolja() {
        txtNaziv.setText("");
        txtPostanskiBroj.setText("");
        cmbPolicijskeUprave.setSelectedIndex(0);

    }

    private boolean kontrolaNaziv() {
        pattern = Pattern.compile(Kontrola.NAZIV_GRADA);
        matcher = pattern.matcher(txtNaziv.getText().trim());

        Kontrola.resetirajPoljeGreske(txtNaziv);
        if (!Kontrola.kontrolaPraznoPolje(txtNaziv.getText(), txtNaziv, "Ovo polje je obavezno! ", ikona)) {
            Kontrola.oznaciPoljeGreske(txtNaziv);
            return false;
        }
        if (!matcher.matches()) {
            Kontrola.kontrolaUnosa(txtNaziv, "<html>Netočan unos.<br>Dopušteno: [a-ž,A-Ž,.,razmak]<br>(min.4 max.50 znakova)</html> ", ikona);
            Kontrola.oznaciPoljeGreske(txtNaziv);
            return false;
        }

        return true;
    }

    private boolean kontrolaPostanskiBroj() {
        pattern = Pattern.compile(Kontrola.POSTANSKI_BROJ);
        matcher = pattern.matcher(txtPostanskiBroj.getText().trim());

        Kontrola.resetirajPoljeGreske(txtPostanskiBroj);
        if (!Kontrola.kontrolaPraznoPolje(txtPostanskiBroj.getText(), txtPostanskiBroj, "Ovo polje je obavezno! ", ikona)) {
            Kontrola.oznaciPoljeGreske(txtPostanskiBroj);
            return false;
        }
        if (!matcher.matches()) {
            Kontrola.kontrolaUnosa(txtPostanskiBroj, "<html>Netočan unos.<br>Dopušteno: [0-9]<br>(točno 5 znakova)</html> ", ikona);
            Kontrola.oznaciPoljeGreske(txtPostanskiBroj);
            return false;
        }

        return true;
    }

    private void napuniCBPolicijskeUprave() {
        ObradaPolicijskaUprava opu = new ObradaPolicijskaUprava();
        List<PolicijskaUprava> l = opu.dohvatiIzBaze("");
        DefaultComboBoxModel<PolicijskaUprava> m = new DefaultComboBoxModel<>();
        PolicijskaUprava pu = new PolicijskaUprava();
        pu.setSifra(0);
        pu.setNaziv("--- Odaberite policijsku upravu ---");
        m.addElement(pu);
        for (PolicijskaUprava policijskaUprava : l) {
            m.addElement(policijskaUprava);
        }
        cmbPolicijskeUprave.setModel(m);
    }

    private void postaviPolicijskeUprave() {
        DefaultComboBoxModel<PolicijskaUprava> m = (DefaultComboBoxModel<PolicijskaUprava>) cmbPolicijskeUprave.getModel();
        int odabrano = 0;
        for (int i = 0; i < m.getSize(); i++) {
            if (m.getElementAt(i).getSifra() == grad.getPolicijskauprava().getSifra()) {
                odabrano = i;
                break;
            }
        }
        cmbPolicijskeUprave.setSelectedIndex(odabrano);
    }

}
