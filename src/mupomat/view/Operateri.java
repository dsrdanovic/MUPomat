/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mupomat.view;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import mupomat.controller.ObradaOperater;
import mupomat.model.Operater;
import mupomat.utility.Kontrola;

/**
 *
 * @author SrKy
 */
public class Operateri extends javax.swing.JFrame {

    private Pattern pattern;
    private Matcher matcher;
    private ObradaOperater obradaOperater;
    private Operater operater;
    private ImageIcon ikona;

    /**
     * Creates new form Operateri
     */
    public Operateri() {
        initComponents();
        obradaOperater = new ObradaOperater();
        setTitle("MUPomat: Administratori");
        ikona = new ImageIcon(getClass().getResource("/mupomat/pictures/balloonerror.png"));
        centrirajZaslon();
        dodajIkonu();
        trazi();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtUvjet = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtKorisnickoIme = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIme = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPrezime = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtLozinka = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        txtLozinkaPonovo = new javax.swing.JPasswordField();
        chbAktivan = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        btnNovi = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnIzlaz = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaOperatera = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Traži administratora"));

        txtUvjet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUvjetKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtUvjet, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Podaci o administratoru"));

        jLabel1.setText("Korisničko ime");

        jLabel2.setText("Ime");

        jLabel3.setText("Prezime");

        jLabel4.setText("Lozinka");

        jLabel5.setText("Lozinka ponovo");

        chbAktivan.setText("Aktivan");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtKorisnickoIme)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(txtIme)
                    .addComponent(txtPrezime)
                    .addComponent(txtLozinka)
                    .addComponent(txtLozinkaPonovo)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(chbAktivan)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(chbAktivan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtLozinkaPonovo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Opcije"));

        btnNovi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/dodajikona.png"))); // NOI18N
        btnNovi.setText("Dodaj ");
        btnNovi.setPreferredSize(new java.awt.Dimension(95, 23));
        btnNovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNoviActionPerformed(evt);
            }
        });

        btnPromjeni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/promjeniikona.png"))); // NOI18N
        btnPromjeni.setText("Promjeni");
        btnPromjeni.setPreferredSize(new java.awt.Dimension(95, 23));
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        btnObrisi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/obrisiikona.png"))); // NOI18N
        btnObrisi.setText("Obriši");
        btnObrisi.setPreferredSize(new java.awt.Dimension(95, 23));
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/ponistiikona.png"))); // NOI18N
        jButton1.setText("Poništi");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnIzlaz.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mupomat/pictures/izlazikona.png"))); // NOI18N
        btnIzlaz.setText("Izlaz");
        btnIzlaz.setPreferredSize(new java.awt.Dimension(95, 23));
        btnIzlaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzlazActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovi, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPromjeni, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnIzlaz, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPromjeni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(btnIzlaz, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Administratori u bazi"));

        listaOperatera.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaOperateraValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(listaOperatera);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIzlazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzlazActionPerformed
        Object[] options = {"Ostani",
            "Izađi",};
        int rez = JOptionPane.showOptionDialog(rootPane,//parent container of JOptionPane
                "Jeste li sigurni da želite izaći iz operatera?",
                "Izlaz iz operatera",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,//do not use a custom Icon
                options,//the titles of buttons
                null);//default button title
        if (rez == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_btnIzlazActionPerformed

    private void txtUvjetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUvjetKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            trazi();
        }
    }//GEN-LAST:event_txtUvjetKeyPressed

    private void listaOperateraValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaOperateraValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        operater = (Operater) listaOperatera.getSelectedValue();

        if (operater == null) {
            return;
        }

        operater = (Operater) listaOperatera.getSelectedValue();
        txtKorisnickoIme.setText(operater.getKorisnickoIme());
        txtIme.setText(operater.getIme());
        txtPrezime.setText(operater.getPrezime());
        chbAktivan.setSelected(operater.isAktivan());
        
    }//GEN-LAST:event_listaOperateraValueChanged

    private void btnNoviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNoviActionPerformed
        if (!kontrola()) {
            return;
        }
        operater = new Operater();
        operater.setKorisnickoIme(txtKorisnickoIme.getText());
        operater.setIme(txtIme.getText());
        operater.setPrezime(txtPrezime.getText());
        operater.setLozinka(new String(txtLozinka.getPassword()));
        operater.setAktivan(chbAktivan.isSelected());

        operater = obradaOperater.dodajNovi(operater);

        trazi();
        pocistiPolja();
    }//GEN-LAST:event_btnNoviActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        if (operater == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite stavku", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }
       
        operater.setKorisnickoIme(txtKorisnickoIme.getText());
        operater.setIme(txtIme.getText());
        operater.setPrezime(txtPrezime.getText());
        operater.setLozinka(new String(txtLozinka.getPassword()));
        operater.setAktivan(chbAktivan.isSelected());

        obradaOperater.promjeniPostojeci(operater);
        pocistiPolja();
        trazi();

    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
         if (operater == null) {
            JOptionPane.showMessageDialog(rootPane, "Prvo odaberite administratora!", "Greška", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Object[] options = {"Da",
            "Ne",};
        int rez = JOptionPane.showOptionDialog(rootPane,//parent container of JOptionPane
                "Sigurno obrisati?",
                "Brisanje",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE,
                null,//do not use a custom Icon
                options,//the titles of buttons
                null);//default button title
        if (rez == JOptionPane.YES_OPTION) {
             try {
                 obradaOperater.obrisiPostojeci(operater);
             } catch (SQLException ex) {
                 Logger.getLogger(Operateri.class.getName()).log(Level.SEVERE, null, ex);
             }
                trazi();
                pocistiPolja();
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pocistiPolja();
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzlaz;
    private javax.swing.JButton btnNovi;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JCheckBox chbAktivan;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList listaOperatera;
    private javax.swing.JTextField txtIme;
    private javax.swing.JTextField txtKorisnickoIme;
    private javax.swing.JPasswordField txtLozinka;
    private javax.swing.JPasswordField txtLozinkaPonovo;
    private javax.swing.JTextField txtPrezime;
    private javax.swing.JTextField txtUvjet;
    // End of variables declaration//GEN-END:variables

    private void centrirajZaslon() {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
        this.setResizable(false);
    }

    private void dodajIkonu() {
        this.setIconImage(new ImageIcon(getClass()
                .getResource("/mupomat" + "/pictures" + "/usermenuicon.png")).getImage());
    }

    private void trazi() {
        List<Operater> lista = obradaOperater.dohvatiIzBaze(txtUvjet.getText().trim());
        DefaultListModel<Operater> m = new DefaultListModel<>();

        for (Operater operater : lista) {
            m.addElement(operater);
        }
        listaOperatera.setModel(m);
    }

    private boolean kontrola() {

        if (!kontrolaKorisnickoIme()
                || !kontrolaIme()
                || !kontrolaPrezime()
                || !kontrolaLozinka()
                || !kontrolaKorisnikPostojiUBazi()) {
            return false;
        }

        return true;
    }

    private boolean kontrolaKorisnikPostojiUBazi() {
        Operater o = obradaOperater.dohvatiAktivnogKorisnikaPoKorisnickomImenu(txtKorisnickoIme.getText().trim());
        if (o != null) {
            JOptionPane.showMessageDialog(rootPane, "Operater s istim korisničkim imenom postoji!", "Pogreška kod unosa", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    private void pocistiPolja() {

        txtIme.setText("");
        txtPrezime.setText("");
        txtKorisnickoIme.setText("");
        txtLozinka.setText("");
        txtLozinkaPonovo.setText("");

    }

    private boolean kontrolaKorisnickoIme() {
        pattern = Pattern.compile(Kontrola.KORISNICKO_IME);
        matcher = pattern.matcher(txtKorisnickoIme.getText().trim());

        Kontrola.resetirajPoljeGreske(txtKorisnickoIme);
        if (!Kontrola.kontrolaPraznoPolje(txtKorisnickoIme.getText(), txtKorisnickoIme, "Ovo polje je obavezno! ", ikona)
                || !kontrolaKorisnikPostojiUBazi()) {
            Kontrola.oznaciPoljeGreske(txtKorisnickoIme);
            return false;
        }
        if (!matcher.matches()) {
            Kontrola.kontrolaUnosa(txtKorisnickoIme, "<html>Netočan unos.<br>Dopušteno: [a-z,0-9,_,-]<br>(min.6 max.15 znakova)</html> ", ikona);
            Kontrola.oznaciPoljeGreske(txtKorisnickoIme);
            return false;
        }

        return true;
    }

    private boolean kontrolaIme() {
        pattern = Pattern.compile(Kontrola.IME);
        matcher = pattern.matcher(txtIme.getText().trim());

        Kontrola.resetirajPoljeGreske(txtIme);
        if (!Kontrola.kontrolaPraznoPolje(txtIme.getText(), txtIme, "Ovo polje je obavezno! ", ikona)) {
            Kontrola.oznaciPoljeGreske(txtIme);
            return false;
        }
        if (!matcher.matches()) {
            Kontrola.kontrolaUnosa(txtIme, "<html>Netočan unos.<br>Dopušteno: [a-ž,A-Ž,razmak]<br>(min.2 maks.50 znakova)</html> ", ikona);
            Kontrola.oznaciPoljeGreske(txtIme);
            return false;
        }

        return true;
    }

    private boolean kontrolaPrezime() {
         pattern = Pattern.compile(Kontrola.PREZIME);
        matcher = pattern.matcher(txtPrezime.getText().trim());

        Kontrola.resetirajPoljeGreske(txtPrezime);
        if (!Kontrola.kontrolaPraznoPolje(txtPrezime.getText(), txtPrezime, "Ovo polje je obavezno! ", ikona)) {
            Kontrola.oznaciPoljeGreske(txtPrezime);
            return false;
        }
        if (!matcher.matches()) {
            Kontrola.kontrolaUnosa(txtPrezime, "<html>Netočan unos.<br>Dopušteno: [a-ž,A-Ž,razmak]<br>(min.2 maks.50 znakova)</html> ", ikona);
            Kontrola.oznaciPoljeGreske(txtPrezime);
            return false;
        }

        return true;
    }

    private boolean kontrolaLozinka() {
        pattern = Pattern.compile(Kontrola.LOZINKA);
        matcher = pattern.matcher(new String(txtLozinka.getPassword()));

        Kontrola.resetirajPoljeGreske(txtLozinka);
        Kontrola.resetirajPoljeGreske(txtLozinkaPonovo);

        if (!Kontrola.kontrolaPraznoPolje(new String(txtLozinka.getPassword()), txtLozinka, "Ovo polje je obavezno! ", ikona)
                || !Kontrola.kontrolaPraznoPolje(new String(txtLozinkaPonovo.getPassword()), txtLozinkaPonovo, "Ovo polje je obavezno! ", ikona)
                || !kontrolaLozinkeIste()) {

            Kontrola.oznaciPoljeGreske(txtLozinka);
            Kontrola.oznaciPoljeGreske(txtLozinkaPonovo);

            return false;
        }

        if (!matcher.matches()) {
            Kontrola.kontrolaUnosa(txtLozinka, "<html>Netočan unos.<br>Lozinka mora sadržavati minimalno jedno malo slovo,<br>jedno veliko slovo i jedan broj.<br>(min.6 max.10 znakova)</html> ", ikona);
            Kontrola.oznaciPoljeGreske(txtLozinka);
            return false;
        }

        return true;
    }

    private boolean kontrolaLozinkeIste() {
        if (!new String(txtLozinka.getPassword()).equals(new String(txtLozinkaPonovo.getPassword()))) {
            Kontrola.kontrolaUnosa(txtLozinka, "<html>Netočan unos.<br>Lozinke nisu jednake!</html> ", ikona);
            return false;
        }

        return true;
    }

}
