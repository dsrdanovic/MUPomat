/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mupomat.view;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.IOException;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import mupomat.controller.ObradaKorisnik;
import mupomat.utility.Kontrola;
import mupomat.utility.PropertiesZapamtiMe;

/**
 *
 * @author SrKy
 */
public class PromjenaLozinke extends javax.swing.JFrame {

    private Pattern pattern;
    private Matcher matcher;
    private ObradaKorisnik obradaKorisnik;
    private ImageIcon ikona;

    /**
     * Creates new form PromjenaLozinke
     */
    public PromjenaLozinke() {
        initComponents();
        setTitle("MUPomat: Promjena lozinke");
        ikona = new ImageIcon(getClass().getResource("/mupomat/pictures/balloonerror.png"));
        centrirajZaslon();
        dodajIkonu();
        obradaKorisnik = new ObradaKorisnik();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnPromjeniLozinku = new javax.swing.JButton();
        txtTrenutnaLozinka = new javax.swing.JPasswordField();
        txtNovaLozinka = new javax.swing.JPasswordField();
        txtPonovoNovaLozinka = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Trenutna lozinka:");

        jLabel2.setText("Nova lozinka:");

        jLabel3.setText("Ponovo nova lozinka:");

        btnPromjeniLozinku.setText("Promjeni lozinku");
        btnPromjeniLozinku.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPromjeniLozinku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniLozinkuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnPromjeniLozinku)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTrenutnaLozinka)
                            .addComponent(txtNovaLozinka)
                            .addComponent(txtPonovoNovaLozinka, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTrenutnaLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNovaLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPonovoNovaLozinka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPromjeniLozinku)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPromjeniLozinkuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniLozinkuActionPerformed
        if (!kontrola()) {

            return;
        }
        promjeniLozinku();

    }//GEN-LAST:event_btnPromjeniLozinkuActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPromjeniLozinku;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField txtNovaLozinka;
    private javax.swing.JPasswordField txtPonovoNovaLozinka;
    private javax.swing.JPasswordField txtTrenutnaLozinka;
    // End of variables declaration//GEN-END:variables
    private void centrirajZaslon() {
        Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
        int x = (int) ((dimension.getWidth() - this.getWidth()) / 2);
        int y = (int) ((dimension.getHeight() - this.getHeight()) / 2);
        this.setLocation(x, y);
        this.setResizable(false);
    }

    private void dodajIkonu() {
        this.setIconImage(new ImageIcon(getClass()
                .getResource("/mupomat" + "/pictures" + "/m.png")).getImage());
    }

    private boolean kontrolaTrenutnaLozinka() {

        try {
            Properties properties = PropertiesZapamtiMe.getProperties();
            if (!new String(txtTrenutnaLozinka.getPassword()).equals(properties.getProperty("lozinka"))) {
                JOptionPane.showMessageDialog(rootPane, "Trenutna lozinka nije točna! Pokušajte ponovo.", "MUPomat: Promjena lozinke", JOptionPane.INFORMATION_MESSAGE);
                return false;
            }

        } catch (IOException ex) {
            Logger.getLogger(PromjenaLozinke.class.getName()).log(Level.SEVERE, null, ex);
        }
        return true;

    }

    private boolean kontrolaLozinki() {
        pattern = Pattern.compile(Kontrola.LOZINKA);
        matcher = pattern.matcher(new String(txtNovaLozinka.getPassword()));

        Kontrola.resetirajPoljeGreske(txtNovaLozinka);
        Kontrola.resetirajPoljeGreske(txtNovaLozinka);
        Kontrola.resetirajPoljeGreske(txtPonovoNovaLozinka);

        if (!Kontrola.kontrolaPraznoPolje(new String(txtTrenutnaLozinka.getPassword()), txtTrenutnaLozinka, "Niste unijeli trenutnu lozinku!", ikona)
                || !Kontrola.kontrolaPraznoPolje(new String(txtNovaLozinka.getPassword()), txtNovaLozinka, "Niste unijeli novu lozinku!", ikona)
                || !Kontrola.kontrolaPraznoPolje(new String(txtPonovoNovaLozinka.getPassword()), txtPonovoNovaLozinka, "Niste unijeli ponovo novu lozinku!", ikona)
                || !kontrolaLozinkeIste()
                || !kontrolaTrenutnaLozinka()) {

            Kontrola.oznaciPoljeGreske(txtTrenutnaLozinka);
            Kontrola.oznaciPoljeGreske(txtNovaLozinka);
            Kontrola.oznaciPoljeGreske(txtPonovoNovaLozinka);

            return false;
        }

        if (!matcher.matches()) {
            JOptionPane.showMessageDialog(rootPane, "Niste unijeli dobar format za lozinku!\n Lozinka mora sadržavati minimalno jedno malo slovo, jedno veliko slovo i jedan broj!\n[Min.6 Max.10 znakova]", "Greška", JOptionPane.ERROR_MESSAGE);
            Kontrola.oznaciPoljeGreske(txtNovaLozinka);
            return false;
        }

        return true;

    }

    private boolean kontrolaLozinkeIste() {
        if (!new String(txtNovaLozinka.getPassword()).equals(new String(txtPonovoNovaLozinka.getPassword()))) {
            JOptionPane.showMessageDialog(rootPane, "Nove lozinke nisu jednake!", "Pogreška kod unosa", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        return true;
    }

    private void promjeniLozinku() {
        System.out.println("tu sam 2");
        try {
            Properties properties = PropertiesZapamtiMe.getProperties();
            obradaKorisnik.postaviNovuLozinku(new String(txtNovaLozinka.getPassword()), properties.getProperty("korisnickoime"));
            JOptionPane.showMessageDialog(rootPane, "Uspješno ste promjenili lozinku!", "MUPomat: Promjena lozinke", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (IOException ex) {
            Logger.getLogger(PromjenaLozinke.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private boolean kontrola() {
        if (!kontrolaLozinki()) {
            return false;
        }

        return true;
    }

}
